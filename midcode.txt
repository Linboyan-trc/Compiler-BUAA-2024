GLOBAL CONST $MAX_SIZE@0 30
GLOBAL CONST $MULTIPLIER@0 7
GLOBAL CONST $OFFSET@0 5
GLOBAL CONST $THRESHOLD@0 15
GLOBAL VAR &global_values@0 
GLOBAL VAR &global_results@0 
GLOBAL CONST &valid_chars@0 65, 66, 67, 68, 69, 70
CALL main
EXIT
main:
main:
LOCAL VAR &primary@18 
LOCAL VAR &auxiliary@18 
LOCAL VAR &char_data@18 
LOCAL VAR $i@18 
CALL initialize_global_values
PUSH 30
PRINT "Enter %d integers for primary array:\n"
SAVE $i@18 <- 0
Label1:
NOP
BRANCH Label2: IF 1 EQ 0
TEMP $0 <- $i@18
$1 <- $0 LT 30
BRANCH Label3: IF $1 EQ 0
LOCAL VAR $temp@19 
CALL GETINT
SAVE $temp@19 <- $?
TEMP $2 <- $temp@19
$3 <- $2 MOD 100
TEMP $4 <- $i@18
&5 <- &primary@18 ADD $4
*&5 <- $3
JUMP Label4
Label3:
NOP
JUMP Label2
Label4:
NOP
TEMP $6 <- $i@18
$7 <- 1 ADD $6
SAVE $i@18 <- $7
JUMP Label1
Label2:
NOP
PUSH 30
PRINT "Enter %d integers for auxiliary array:\n"
SAVE $i@18 <- 0
Label5:
NOP
BRANCH Label6: IF 1 EQ 0
BRANCH Label7: IF 1 EQ 0
TEMP $8 <- $i@18
$9 <- $8 EQ 30
BRANCH Label8: IF $9 EQ 0
JUMP Label6
Label8:
NOP
LOCAL VAR $temp@20 
CALL GETINT
SAVE $temp@20 <- $?
TEMP $10 <- $temp@20
$11 <- $10 MOD 50
$12 <- -5 ADD $11
TEMP $13 <- $i@18
&14 <- &auxiliary@18 ADD $13
*&14 <- $12
JUMP Label9
Label7:
NOP
JUMP Label6
Label9:
NOP
TEMP $15 <- $i@18
$16 <- 1 ADD $15
SAVE $i@18 <- $16
JUMP Label5
Label6:
NOP
PUSH 30
PRINT "Enter %d integers for char array:\n"
SAVE $i@18 <- 0
Label10:
NOP
BRANCH Label11: IF 1 EQ 0
BRANCH Label12: IF 1 EQ 0
TEMP $17 <- $i@18
$18 <- $17 EQ 30
BRANCH Label13: IF $18 EQ 0
JUMP Label11
Label13:
NOP
LOCAL VAR $temp@21 
CALL GETINT
SAVE $temp@21 <- $?
TEMP $19 <- $temp@21
$20 <- $19 MOD 6
&21 <- &valid_chars@0 ADD $20
TEMP $22 <- *&21
TEMP $23 <- $i@18
&24 <- &char_data@18 ADD $23
*&24 <- $22
TEMP $25 <- $i@18
$26 <- 1 ADD $25
SAVE $i@18 <- $26
JUMP Label14
Label12:
NOP
JUMP Label11
Label14:
NOP
NOP
JUMP Label10
Label11:
NOP
LOCAL VAR $filtered_sum@23 
TEMP &27 <- &primary@18
PUSH &27
PUSH 30
PUSH 15
CALL filter_array
TEMP $28 <- $?
SAVE $filtered_sum@23 <- $28
TEMP $29 <- $filtered_sum@23
PUSH $29
PRINT "Filtered sum of primary: %d\n"
LOCAL VAR $weighted_result@24 
TEMP &30 <- &auxiliary@18
PUSH &30
PUSH 30
PUSH 20
CALL mod_array
TEMP &31 <- &auxiliary@18
PUSH &31
PUSH 30
PUSH 2
CALL weighted_sum
TEMP $32 <- $?
SAVE $weighted_result@24 <- $32
TEMP $33 <- $weighted_result@24
PUSH $33
PRINT "Weighted sum of auxiliary: %d\n"
NOP
Label15:
NOP
BRANCH Label16: IF 1 EQ 0
BRANCH Label17: IF 1 EQ 0
&34 <- &global_values@0 ADD 0
TEMP $35 <- *&34
$36 <- $35 GT 0
BRANCH Label18: IF $36 EQ 0
TEMP &37 <- &primary@18
PUSH &37
PUSH 30
PUSH 5
PUSH 15
CALL complex_computation
TEMP $38 <- $?
&39 <- &global_results@0 ADD 0
*&39 <- $38
JUMP Label19
Label18:
NOP
&40 <- &global_values@0 ADD 0
TEMP $41 <- *&40
$42 <- $41 EQ 0
BRANCH Label20: IF $42 EQ 0
TEMP &43 <- &auxiliary@18
PUSH &43
PUSH 30
PUSH 3
CALL weighted_sum
TEMP $44 <- $?
&45 <- &global_results@0 ADD 0
*&45 <- $44
JUMP Label21
Label20:
NOP
JUMP Label16
Label21:
NOP
Label19:
NOP
JUMP Label16
JUMP Label22
Label17:
NOP
JUMP Label16
Label22:
NOP
NOP
JUMP Label15
Label16:
NOP
&46 <- &global_results@0 ADD 0
TEMP $47 <- *&46
PUSH $47
PRINT "Global result: %d\n"
LOCAL VAR $valid_count@29 
TEMP &48 <- &char_data@18
PUSH &48
PUSH 30
CALL count_valid_chars
TEMP $49 <- $?
SAVE $valid_count@29 <- $49
TEMP $50 <- $valid_count@29
$51 <- $50 GT 10
BRANCH Label23: IF $51 EQ 0
PRINT "Valid chars exceed 10\n"
JUMP Label24
Label23:
NOP
TEMP $52 <- $valid_count@29
$53 <- $52 GT 5
BRANCH Label25: IF $53 EQ 0
PRINT "Valid chars exceed 5\n"
JUMP Label26
Label25:
NOP
PRINT "Few valid chars\n"
Label26:
NOP
Label24:
NOP
RETURN 0
initialize_global_values:
initialize_global_values:
LOCAL VAR $i@1 
SAVE $i@1 <- 0
Label27:
NOP
BRANCH Label28: IF 1 EQ 0
TEMP $54 <- $i@1
$55 <- $54 LT 30
BRANCH Label29: IF $55 EQ 0
TEMP $56 <- $i@1
$57 <- 7 MUL $56
$58 <- 5 ADD $57
$59 <- $58 MOD 100
TEMP $60 <- $i@1
&61 <- &global_values@0 ADD $60
*&61 <- $59
TEMP $62 <- $i@1
&63 <- &global_results@0 ADD $62
*&63 <- 0
JUMP Label30
Label29:
NOP
JUMP Label28
Label30:
NOP
TEMP $64 <- $i@1
$65 <- 1 ADD $64
SAVE $i@1 <- $65
JUMP Label27
Label28:
NOP
RETURN
mod_array:
mod_array:
PARA &arr@3
PARA $size@3
PARA $mod@3
LOCAL VAR $i@3 
SAVE $i@3 <- 0
Label31:
NOP
BRANCH Label32: IF 1 EQ 0
TEMP $66 <- $i@3
TEMP $67 <- $size@3
$68 <- $66 LT $67
BRANCH Label33: IF $68 EQ 0
TEMP $69 <- $i@3
&70 <- &arr@3 ADD $69
TEMP $71 <- *&70
TEMP $72 <- $mod@3
$73 <- $71 MOD $72
TEMP $74 <- $i@3
&75 <- &arr@3 ADD $74
*&75 <- $73
JUMP Label34
Label33:
NOP
JUMP Label32
Label34:
NOP
TEMP $76 <- $i@3
$77 <- 1 ADD $76
SAVE $i@3 <- $77
JUMP Label31
Label32:
NOP
RETURN
weighted_sum:
weighted_sum:
PARA &arr@5
PARA $size@5
PARA $weight@5
LOCAL VAR $sum@5 0
LOCAL VAR $i@5 
SAVE $i@5 <- 0
Label35:
NOP
BRANCH Label36: IF 1 EQ 0
TEMP $78 <- $i@5
TEMP $79 <- $size@5
$80 <- $78 LT $79
BRANCH Label37: IF $80 EQ 0
TEMP $81 <- $sum@5
TEMP $82 <- $i@5
&83 <- &arr@5 ADD $82
TEMP $84 <- *&83
TEMP $85 <- $weight@5
$86 <- $84 MUL $85
$87 <- $81 ADD $86
SAVE $sum@5 <- $87
JUMP Label38
Label37:
NOP
JUMP Label36
Label38:
NOP
TEMP $88 <- $i@5
$89 <- 1 ADD $88
SAVE $i@5 <- $89
JUMP Label35
Label36:
NOP
TEMP $90 <- $sum@5
RETURN $90
filter_array:
filter_array:
PARA &arr@7
PARA $size@7
PARA $threshold@7
LOCAL VAR $sum@7 0
LOCAL VAR $i@7 
SAVE $i@7 <- 0
Label39:
NOP
BRANCH Label40: IF 1 EQ 0
TEMP $91 <- $i@7
TEMP $92 <- $size@7
$93 <- $91 LT $92
BRANCH Label41: IF $93 EQ 0
TEMP $94 <- $i@7
&95 <- &arr@7 ADD $94
TEMP $96 <- *&95
TEMP $97 <- $threshold@7
$98 <- $96 GT $97
BRANCH Label42: IF $98 EQ 0
TEMP $99 <- $sum@7
TEMP $100 <- $i@7
&101 <- &arr@7 ADD $100
TEMP $102 <- *&101
$103 <- $99 ADD $102
SAVE $sum@7 <- $103
JUMP Label43
Label42:
NOP
TEMP $104 <- $i@7
&105 <- &arr@7 ADD $104
TEMP $106 <- *&105
TEMP $107 <- $threshold@7
$108 <- NEG $107
$109 <- $106 LT $108
BRANCH Label44: IF $109 EQ 0
TEMP $110 <- $sum@7
TEMP $111 <- $i@7
&112 <- &arr@7 ADD $111
TEMP $113 <- *&112
$114 <- $110 ADD $113
SAVE $sum@7 <- $114
Label44:
NOP
Label43:
NOP
JUMP Label45
Label41:
NOP
JUMP Label40
Label45:
NOP
TEMP $115 <- $i@7
$116 <- 1 ADD $115
SAVE $i@7 <- $116
JUMP Label39
Label40:
NOP
TEMP $117 <- $sum@7
RETURN $117
count_valid_chars:
count_valid_chars:
PARA &arr@10
PARA $size@10
LOCAL VAR $count@10 0
LOCAL VAR $i@10 
SAVE $i@10 <- 0
Label46:
NOP
BRANCH Label47: IF 1 EQ 0
TEMP $118 <- $i@10
TEMP $119 <- $size@10
$120 <- $118 LT $119
BRANCH Label48: IF $120 EQ 0
LOCAL VAR $j@11 
SAVE $j@11 <- 0
Label49:
NOP
BRANCH Label50: IF 1 EQ 0
TEMP $121 <- $j@11
$122 <- $121 LT 6
BRANCH Label51: IF $122 EQ 0
TEMP $123 <- $i@10
&124 <- &arr@10 ADD $123
TEMP $125 <- *&124
TEMP $126 <- $j@11
&127 <- &valid_chars@0 ADD $126
TEMP $128 <- *&127
$129 <- $125 EQ $128
BRANCH Label52: IF $129 EQ 0
TEMP $130 <- $count@10
$131 <- 1 ADD $130
SAVE $count@10 <- $131
JUMP Label50
Label52:
NOP
JUMP Label53
Label51:
NOP
JUMP Label50
Label53:
NOP
TEMP $132 <- $j@11
$133 <- 1 ADD $132
SAVE $j@11 <- $133
JUMP Label49
Label50:
NOP
JUMP Label54
Label48:
NOP
JUMP Label47
Label54:
NOP
TEMP $134 <- $i@10
$135 <- 1 ADD $134
SAVE $i@10 <- $135
JUMP Label46
Label47:
NOP
TEMP $136 <- $count@10
RETURN $136
complex_computation:
complex_computation:
PARA &arr@14
PARA $size@14
PARA $mod@14
PARA $threshold@14
TEMP &137 <- &arr@14
TEMP $138 <- $size@14
TEMP $139 <- $mod@14
PUSH &137
PUSH $138
PUSH $139
CALL weighted_sum
TEMP $140 <- $?
LOCAL VAR $weighted@14 $140
TEMP $141 <- $weighted@14
$142 <- $141 GT 500
BRANCH Label55: IF $142 EQ 0
TEMP &143 <- &arr@14
TEMP $144 <- $size@14
TEMP $145 <- $threshold@14
PUSH &143
PUSH $144
PUSH $145
CALL filter_array
TEMP $146 <- $?
RETURN $146
JUMP Label56
Label55:
NOP
TEMP $147 <- $weighted@14
$148 <- $147 LT -500
BRANCH Label57: IF $148 EQ 0
TEMP $149 <- $weighted@14
TEMP $150 <- $threshold@14
$151 <- $149 MOD $150
RETURN $151
JUMP Label58
Label57:
NOP
TEMP $152 <- $weighted@14
RETURN $152
Label58:
NOP
Label56:
NOP
